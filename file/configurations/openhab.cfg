# This is the default configuration file, which comes with every openHAB distribution.
# You should do a copy of it with the name 'openhab.cfg' and configure your personal
# settings in there. This way you can be sure that they are not overwritten, if you
# update openHAB one day.


#######################################################################################
#####                        General configurations                               #####
#######################################################################################

# Configuration folders (must exist as a subdirectory of "configurations"; the value
# tells the number of seconds for the next scan of the directory for changes. A
# value of -1 deactivates the scan).
# A comma separated list can follow after the refresh value. This list defines a filter
# for valid file extensions for the models.
folder:items=10,items
folder:sitemaps=10,sitemap
folder:rules=10,rules
folder:scripts=10,script
folder:persistence=10,persist

# The name of the default persistence service to use
persistence:default=rrd4j

################################## Chart Servlet ######################################
#
# This section defines the configuration for the chart servlet.
chart:provider=default

######################### Logging Persistence Service #################################
#
# the logback encoder pattern to use to write log entries
# see http://logback.qos.ch/manual/layouts.html#ClassicPatternLayout for all options
# the item name is available as the "logger" name, the state as the "msg"
logging:pattern=%date{ISO8601} - %-25logger: %msg%n

############################ SQL Persistence Service ##################################
# the database url like 'jdbc:mysql://<host>:<port>/<database>' (without quotes)
mysql:url=jdbc:mysql://127.0.0.1/OpenHAB

# the database user
mysql:user=openhab

# the database password
mysql:password=openhab

# the reconnection counter
#mysql:reconnectCnt=

# the connection timeout (in seconds)
#mysql:waitTimeout=

################################# MQTT Persistence #########################################
#
# Name of the broker as defined in the section MQTT Transport
mqtt-persistence:broker=openhab

# The MQTT topic to which the persistence messages should be sent.
# mqtt-persistence:topic=

# A string representing the persistence message content.
# mqtt-persistence:message=

#######################################################################################
#####                       Transport configurations                              #####
#######################################################################################

################################# MQTT Transport ######################################
#
# Define your MQTT broker connections here for use in the MQTT Binding or MQTT
# Persistence bundles. Replace <broker> with a id you choose.
#

# URL to the MQTT broker, e.g. tcp://localhost:1883 or ssl://localhost:8883
mqtt:openhab.url=tcp://localhost:1883

# Optional. Client id (max 23 chars) to use when connecting to the broker.
# If not provided a default one is generated.
#mqtt:<broker>.clientId=<clientId>

# Optional. User id to authenticate with the broker.
# mqtt:<broker>.user=<user>

# Optional. Password to authenticate with the broker.
#mqtt:<broker>.pwd=<password>

# Optional. Set the quality of service level for sending messages to this broker.
# Possible values are 0 (Deliver at most once),1 (Deliver at least once) or 2
# (Deliver exactly once). Defaults to 0.
#mqtt:<broker>.qos=<qos>

# Optional. True or false. Defines if the broker should retain the messages sent to
# it. Defaults to false.
#mqtt:<broker>.retain=<retain>

# Optional. True or false. Defines if messages are published asynchronously or
# synchronously. Defaults to true.
#mqtt:<broker>.async=<async>

# Optional. Defines the last will and testament that is sent when this client goes offline
# Format: topic:message:qos:retained <br/>
#mqtt:<broker>.lwt=<last will definition>

#######################################################################################
#####                        Binding configurations                               #####
#######################################################################################

################################ NTP Binding ##########################################
#
# refresh interval in milliseconds (optional, defaults to 900000 [15 minutes])
#ntp:refresh=

# the hostname of the timeserver
ntp:hostname=ptbtime1.ptb.de

############################### Philips Hue Binding ###################################
#
# IP address of Hue Bridge (optional, default is auto-discovery)
# 
hue:ip=[INSERT_IP]

# Default secret key for the pairing of the Philips Hue Bridge.
# It has to be between 10-40 (alphanumeric) characters
# This may be changed by the user for security reasons.
# Default : 'newdeveloper'
hue:secret=[INSERT_API_USER]

# Polling interval in msec to retrieve Philips bulb status.
# Other apps can change Hue status or a physical switch can turn on / off lamp status.
# If this happens the status of hue lamps within OpenHAB won't reflect the real status.
# Currently (September 2014) there is no push technology available, so the only option is
# to poll Philips bulbs to retrieve status and update items accordingly to reflect changes.
# Polling is enabled if refresh is specified, by commenting out "hue:refresh=10000" statement.
# Be aware that polling will consume resources, so a small refresh interval will increase cpu load.
hue:refresh=10000

################################ SAMSUNG TV Binding ###################################
#
# Host of the first TV to control
# samsungtv:<TVid1>.host=
# Port of the TV to control (optional, defaults to 55000)
# samsungtv:<TVid1>.port=

# Host of the second TV to control
# samsungtv:<TVid2>.host=
# Port of the TV to control (optional, defaults to 55000)
# samsungtv:<TVid2>.port=

################################# TCP - UDP Binding ###################################
#
# all parameters can be applied to both the TCP and UDP binding unless
# specified otherwise

# Port to listen for incoming connections
#tcp:port=25001

# Cron-like string to reconnect remote ends, e.g for unstable connection or remote ends
#tcp:reconnectcron=0 0 0 * * ?

# Interval between reconnection attempts when recovering from a communication error,
# in seconds
#tcp:retryinterval=5

# Queue data whilst recovering from a connection problem (TCP only)
#tcp:queue=true

# Maximum buffer size whilst reading incoming data
#tcp:buffersize=1024

# Share connections within the Item binding configurations
#tcp:itemsharedconnections=true

# Share connections between Item binding configurations
#tcp:bindingsharedconnections=true

# Share connections between inbound and outbound connections
#tcp:directionssharedconnections=false

# Allow masks in ip:port addressing, e.g. 192.168.0.1:* etc
#tcp:addressmask=true

# Pre-amble that will be put in front of data being sent
#tcp:preamble=

# Post-amble that will be appended to data being sent
#tcp:postamble=\r\n

# Perform all write/read (send/receive) operations in a blocking mode, e.g. the binding
# will wait for a reply from the remote end after data has been sent
#tcp:blocking=false

# timeout, in milliseconds, to wait for a reply when initiating a blocking write/read
#  operation
#tcp:timeout=3000

# Update the status of Items using the response received from the remote end (if the
# remote end sends replies to commands)
#tcp:updatewithresponse=true

# Timeout - or 'refresh interval', in milliseconds, of the worker thread
tcp:refreshinterval=250

# Timeout, in milliseconds, to wait when "Selecting" IO channels ready for communication
#tcp:selecttimeout=1000

# Used character set
#tcp:charset=ASCII

################################## LgTV  Binding ######################################
#
# The ip address of the lgtv
#lgtv:<lgtvId1>.host=

# The TCP port address to use
#lgtv:<lgtvId1>.port=

# The the pairkey / if it's wrong the device shows the right pairkey
# at every connection attempt
#lgtv:<lgtvId1>.pairkey=

# The TCP port address of the openhab system to receive lgtv status messages
# (only first occurance is used for all tvs)
#lgtv:<lgtvId1>.serverport=

# The location to put xml files with the information of availiable
# channels and apps (optional)
#lgtv:<lgtvId1>.xmldatafiles=./

# The check alive interval (optional, defaults to 60secs)
#lgtv:<lgtvId1>.checkalive=

################################ Panasonic TV Binding #######################################
#
# IP address of a Panasonic TV instance
# panasonictv:<id>=
